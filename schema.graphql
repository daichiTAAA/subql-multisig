type Block @entity {
  id: ID!

  number: BigInt
  timestamp: Date
  parentHash: String
  specVersion: Int

  extrinsics: [Extrinsic] @derivedFrom(field: "block")
}

type Extrinsic @entity {
  id: ID!

  method: String
  section: String
  args: String
  signerId: String
  nonce: BigInt
  timestamp: Date
  signature: String
  tip: BigInt
  isSigned: Boolean
  isSuccess: Boolean

  block: Block #create relation to block
}

type MultisigAccount @entity {
  id: ID!

  confirmed: [ExecutedMultisig] @derivedFrom(field: "multisigAccount")
}

type MultisigRecord @entity {
  id: ID! # blockHeight-extrinsicIdx
  approveRecords: [ApproveRecord] @derivedFrom(field: "multisigRecord")
}

type ApproveRecord @entity {
  id: ID! # accountId-blockHeight-extrinsicIdx
  account: String! # approve account address
  multisigRecord: MultisigRecord!
}

type ExecutedMultisig @entity {
  id: ID! # blockHeight-eventIdx
  extrinsicIdx: String! # blockHeight-extrinsicIdx
  module: String!

  method: String!

  multisigAccount: MultisigAccount!

  timestamp: Date

  block: Block!

  approvals: [String!]
}

type CancelledMultisig @entity {
  id: ID! # blockHeight-eventIdx
  extrinsicIdx: String! # blockHeight-extrinsicIdx
  module: String!

  method: String!

  multisigAccount: MultisigAccount!

  timestamp: Date

  block: Block!

  approvals: [String!]
}
